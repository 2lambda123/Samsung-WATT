#%RAML 0.8
title: WWST Washer job state
version: v1.0.0-20170911
schemas:
- Operation: |
    {
      "id": "http://openinterconnect.org/iotdatamodels/schemas/x.com.st.operationalstate.washer.json#",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "description": "Copyright (c) 2016, 2017 Open Connectivity Foundation, Inc. All rights reserved.",
      "title": "Operation",
      "definitions": {
        "x.com.st.operationalstate.washer": {
          "type": "object",
          "properties": {
            "washerJobState": {
              "type": "string",
              "enum": ["airWash","cooling","delayWash","drying","finish","none","preWash","rinse","spin","wash","weightSensing","wrinklePrevent"],
              "description": "Currently active jobState"
            },
            "machineState": {
              "type": "string",
              "enum": ["stop", "pause", "run"],
              "description": "Currently active currentMachineState"
            },
            "supportedMachineStates": {
              "type": "array",
              "readOnly": true,
              "description": "array of the possible currentMachineState.",
              "items": {
                "type": "string"
              }
            },
            "remainingTime": {
              "type": "integer",
              "description": "Ramaining Time"
            }
          }
        }
      },
      "type": "object",
      "allOf": [
        {
          "$ref": "oic.baseResource.json#/definitions/oic.r.baseresource"
        },
        {
          "$ref": "#/definitions/x.com.st.operationalstate.washer"
        }
      ],
      "required": [
        "washerJobState","machineState","supportedMachineStates","remainingTime"
      ]
    }

- OperationUpdate: |
    {
      "id": "http://openinterconnect.org/iotdatamodels/schemas/x.com.st.operationalstate.washer.json#",
      "$schema": "http://json-schema.org/draft-04/schema#",
      "description": "Copyright (c) 2016, 2017 Open Connectivity Foundation, Inc. All rights reserved.",
      "title": "Operational State",
      "definitions": {
        "x.com.st.operationalstate.washer": {
          "type": "object",
          "properties": {
            "machineState": {
              "type": "string",
              "enum": ["stop", "pause", "run"],
              "description": "Currently active currentMachineState"
            }
          }
        }
      },
      "type": "object",
      "allOf": [
        {
          "$ref": "oic.baseResource.json#/definitions/oic.r.baseresource"
        },
        {
          "$ref": "#/definitions/x.com.st.operationalstate.washer"
        }
      ],
      "required": [
        "machineState"
      ]
    }

traits:
  - interface:
      queryParameters:
        if:
          enum: ["oic.if.a","oic.if.s","oic.if.baseline"]

/WWSTWasherjobstateResURI:
  description: |
        Washer job state
  displayName: WWST Washer job state
  is: [ interface ]

  get:
    description: |
      Retrieves the current Washer job state
    responses:
      200:
        body:
          application/json:
            schema: Operation
            example: |
              {
                "rt": ["x.com.st.operationalstate.washer"],
                "id": "unique_example_id",
                "washerJobState": "airWash",
                "machineState": "stop",
                "supportedMachineStates" : ["stop", "pause", "run" ],
                "remainingTime" : 1503374528
              }

  post:
    description: |
      Sets the desired operational or job state.
    body:
      application/json:
        schema: OperationUpdate
        example: |
          {
            "id":    "unique_example_id",
            "machineState": "stop"
          }
    responses:
      200:
        body:
          application/json:
            schema: OperationUpdate
            example: |
              {
                "id":    "unique_example_id",
                "machineState": "stop"
              }
